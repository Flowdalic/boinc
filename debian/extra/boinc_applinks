#!/usr/bin/python2.3
# -*- coding: utf-8 -*-
#
# This script creates symlinks for anonymous BOINC applications.
# Copyright Â© 2006 Debian BOINC Maintainers
#                  <pkg-boinc-devel@lists.alioth.debian.org>
#
# This file is licensed under the terms of the GNU General Public License,
# Version 2 or any later version published by the Free Software Foundation.
#
# $Id$

import optparse
import os
import sys

APPS_INFO_DIR = '/usr/share/boinc-apps/info/'

def main():
    if not os.path.isdir(APPS_INFO_DIR):
        sys.exit(0)

    opts = parse_options()

    projects = {}

    for file in os.listdir(APPS_INFO_DIR):
        if file.endswith('.py'):
            if opts.project == '' or file[:-3] == opts.project:
                execfile(APPS_INFO_DIR + file)

    for project in projects:
        for url in projects[project]['urls']:
            project_dir = opts.data_dir + '/projects/' + url + '/'
            my_makedirs(project_dir, opts.create)
            my_symlink(projects[project]['app_info'],
                project_dir + 'app_info.xml', opts.create)

            for app_src in projects[project]['apps']:
                app_dst = project_dir + os.path.basename(app_src)
                my_symlink(app_src, app_dst, opts.create)
    return

def my_makedirs(path, bool):
    if bool == False:
        return

    try:
        os.makedirs(path)
    except OSError:
        pass

    return

def my_symlink(src, dst, bool):
    if os.path.isfile(dst) and not os.path.islink(dst):
        return
    elif os.path.islink(dst):
        os.remove(dst)

    if bool == True:
        os.symlink(src, dst)

    return

def parse_options():
    parser = optparse.OptionParser()

    parser.add_option('--create', action='store_true', dest='create',
        default=True, help='create symlinks and project directories')

    parser.add_option('--remove', action='store_false', dest='create',
        help='remove symlinks')

    parser.add_option('--data-dir', dest='data_dir', default='', metavar='DIR',
        help='destination directory for the symlinks')

    parser.add_option('--project', dest='project', default='',
        metavar='PROJECT', help='create only symlinks for project PROJECT')

    (opts, args) = parser.parse_args()
    return opts

if __name__ == '__main__':
    main()
