Description: Use wxHtmlWindow instead of wxWebView
Author: Olly Betts <olly@survex.com>
Forwarded: no
Last-Update: 2017-09-26

--- a/clientgui/NoticeListCtrl.cpp
+++ b/clientgui/NoticeListCtrl.cpp
@@ -50,8 +50,8 @@
 BEGIN_EVENT_TABLE( CNoticeListCtrl, wxWindow )
 
 ////@begin CNoticeListCtrl event table entries
-    EVT_WEBVIEW_NAVIGATING(ID_LIST_NOTIFICATIONSVIEW, CNoticeListCtrl::OnLinkClicked)
-    EVT_WEBVIEW_ERROR(ID_LIST_NOTIFICATIONSVIEW, CNoticeListCtrl::OnWebViewError)
+    EVT_HTML_LINK_CLICKED(ID_LIST_NOTIFICATIONSVIEW, CNoticeListCtrl::OnLinkClicked)
+//    EVT_WEBVIEW_ERROR(ID_LIST_NOTIFICATIONSVIEW, CNoticeListCtrl::OnWebViewError)
 ////@end CNoticeListCtrl event table entries
  
 END_EVENT_TABLE()
@@ -84,7 +84,7 @@
     wxWindow::Create( parent, ID_LIST_NOTIFICATIONSVIEW, wxDefaultPosition, wxDefaultSize,
         wxSUNKEN_BORDER | wxTAB_TRAVERSAL );
 
-    m_browser = wxWebView::New( this, ID_LIST_NOTIFICATIONSVIEW );
+    m_browser = new wxHtmlWindow( this, ID_LIST_NOTIFICATIONSVIEW );
 ////@end CNoticeListCtrl creation
 
     wxBoxSizer *topsizer;
@@ -238,7 +238,7 @@
     m_noticesBody += wxT("</font></body></html>");
     // baseURL is not needed here (see comments above) and it
     // must be an empty string for this to work under OS 10.12.4
-    m_browser->SetPage(m_noticesBody, wxEmptyString);
+    m_browser->SetPage(m_noticesBody);
 }
 
 
@@ -248,22 +248,27 @@
 }
 
 
-void CNoticeListCtrl::OnLinkClicked( wxWebViewEvent& event ) {
-    if (event.GetURL().StartsWith(wxT("http://")) || event.GetURL().StartsWith(wxT("https://"))) {
-        event.Veto();   // Tell wxWebView not to follow link
-		wxLaunchDefaultBrowser(event.GetURL());
+void CNoticeListCtrl::OnLinkClicked( wxHtmlLinkEvent& event ) {
+    wxString url = event.GetLinkInfo().GetHref();
+    if (url.StartsWith(wxT("http://")) || url.StartsWith(wxT("https://"))) {
+	// wxHtmlLinkEvent doesn't have Veto(), but only loads the page if you
+	// call Skip().
+        // event.Veto();   // Tell wxWebView not to follow link
+		wxLaunchDefaultBrowser(url);
     } else {
         event.Skip();
     }
 }
 
 
+#if 0
 void CNoticeListCtrl::OnWebViewError( wxWebViewEvent& event ) {
    fprintf(stderr, "wxWebView error: target=%s, URL=%s\n", 
             (event.GetTarget().ToStdString()).c_str(), (event.GetURL().ToStdString()).c_str());
 
     event.Skip();
 }
+#endif
 
 
 /*!
--- a/clientgui/NoticeListCtrl.h
+++ b/clientgui/NoticeListCtrl.h
@@ -45,8 +45,8 @@
     
 ////@begin CNoticeListCtrl event handler declarations
 
-    void OnLinkClicked( wxWebViewEvent& event );
-    void OnWebViewError( wxWebViewEvent& event );
+    void OnLinkClicked( wxHtmlLinkEvent& event );
+//    void OnWebViewError( wxWebViewEvent& event );
 
 ////@end CNoticeListCtrl event handler declarations
 
@@ -56,7 +56,7 @@
     bool        m_bDisplayFetchingNotices;
     bool        m_bDisplayEmptyNotice;
 private:
-    wxWebView*  m_browser;
+    wxHtmlWindow*  m_browser;
     bool        m_bNeedsReloading;
     int         m_itemCount;
     wxString    m_noticesBody;
--- a/clientgui/stdwx.h
+++ b/clientgui/stdwx.h
@@ -117,8 +117,11 @@
 #include <wx/mstream.h>
 #include <wx/hash.h>
 #include <wx/selstore.h>
+#if 0
 #include <wx/webview.h>
 #include <wx/webviewfshandler.h>
+#endif
+#include <wx/html/htmlwin.h>
 #include <wx/snglinst.h>
 #include <wx/bmpcbox.h>
 #include <wx/evtloop.h>
