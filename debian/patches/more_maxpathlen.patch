Description: use MAXPATHLEN and change sprintf to snprintf
--- a/api/graphics2_util.cpp
+++ b/api/graphics2_util.cpp
@@ -40,7 +40,7 @@
 static key_t get_shmem_name(const char* prog_name) {
     char cwd[MAXPATHLEN], path[MAXPATHLEN];
     boinc_getcwd(cwd);
-    sprintf(path, "%s/init_data.xml", cwd);
+    snprintf(path, sizeof(path), "%s/init_data.xml", cwd);
     return ftok(path, 2);
 }
 #else
@@ -50,7 +50,7 @@
     APP_INIT_DATA aid;
     int retval = boinc_get_init_data(aid);
     if (retval) aid.slot = 0;
-    sprintf(shmem_name, "boinc_%s_%d", prog_name, aid.slot);
+    snprintf(shmem_name, MAXPATHLEN, "boinc_%s_%d", prog_name, aid.slot);
 }
 #endif
 
--- a/lib/filesys.cpp
+++ b/lib/filesys.cpp
@@ -440,7 +440,7 @@
     while (1) {
         retval = dir_scan(filename, dirp, sizeof(filename));
         if (retval) break;
-        sprintf(subdir, "%s/%s", dirpath, filename);
+        snprintf(subdir, sizeof(subdir), "%s/%s", dirpath, filename);
 
         if (is_dir(subdir)) {
             if (recurse) {
@@ -563,8 +563,8 @@
     }
     return 0;
 #elif defined(__EMX__)
-    char cmd[2*MAXPATHLEN];
-    sprintf(cmd, "copy \"%s\" \"%s\"", orig, newf);
+    char cmd[2*MAXPATHLEN+5];
+    snprintf(cmd, sizeof(cmd), "copy \"%s\" \"%s\"", orig, newf);
     return system(cmd);
 #else
     // POSIX requires that shells run from an application will use the 
@@ -695,7 +695,7 @@
         p = strchr(q, '/');
         if (!p) break;
         *p = 0;
-        sprintf(newpath, "%s/%s", oldpath, q);
+        snprintf(newpath, sizeof(newpath), "%s/%s", oldpath, q);
         retval = boinc_mkdir(newpath);
         if (retval) return retval;
         safe_strcpy(oldpath, newpath);
--- a/lib/network.cpp
+++ b/lib/network.cpp
@@ -73,7 +73,7 @@
     case WSAENOTSOCK:
         return "not a socket";
     }
-    sprintf(buf, "error %d", e);
+    snprintf(buf, sizeof(buf), "error %d", e);
     return buf;
 #else
     switch (h_errno) {
@@ -87,11 +87,11 @@
         return "host not found or server failure";
 #ifdef NETDB_INTERNAL
     case NETDB_INTERNAL:
-        sprintf(buf,"network internal error %d",errno);
+        snprintf(buf, sizeof(buf), "network internal error %d",errno);
         return buf;
 #endif
     }
-    sprintf(buf, "error %d", h_errno);
+    snprintf(buf, sizeof(buf), "error %d", h_errno);
     return buf;
 #endif
 }
