Description: https://github.com/BOINC/boinc/pull/4071
Index: boinc/client/boinc_cmd.cpp
===================================================================
--- boinc.orig/client/boinc_cmd.cpp
+++ boinc/client/boinc_cmd.cpp
@@ -163,6 +163,30 @@ void acct_mgr_do_rpc(
     }
 }
 
+// Get messages from client, and show any that are USER_ALERT priority.
+// Intended use: show user that GUI RPCs are not password-protected.
+// For now, do this after attach to project or AM
+//
+void show_alerts(RPC_CLIENT &rpc) {
+    MESSAGES messages;
+    int retval = rpc.get_messages(0, messages);
+    if (retval) {
+        fprintf(stderr, "Can't get alerts from client: %s\n",
+            boincerror(retval)
+        );
+        return;
+    }
+    for (unsigned int j=0; j<messages.messages.size(); j++) {
+        MESSAGE& md = *messages.messages[j];
+        if (md.priority != MSG_USER_ALERT) continue;
+        if (!md.project.empty()) continue;
+        strip_whitespace(md.body);
+        fprintf(stderr, "\nAlert from client: %s\n",
+            md.body.c_str()
+        );
+    }
+}
+
 int main(int argc, char** argv) {
     RPC_CLIENT rpc;
     int i, retval, port=0;
@@ -382,6 +406,7 @@ int main(int argc, char** argv) {
         canonicalize_master_url(url, sizeof(url));
         char* auth = next_arg(argc, argv, i);
         retval = rpc.project_attach(url, auth, "");
+        show_alerts(rpc);
     } else if (!strcmp(cmd, "--file_transfer")) {
         FILE_TRANSFER ft;
 
@@ -529,6 +554,7 @@ int main(int argc, char** argv) {
             char* am_name = next_arg(argc, argv, i);
             char* am_passwd = next_arg(argc, argv, i);
             acct_mgr_do_rpc(rpc, am_url, am_name, am_passwd);
+            show_alerts(rpc);
         } else if (!strcmp(op, "info")) {
             ACCT_MGR_INFO ami;
             retval = rpc.acct_mgr_info(ami);
Index: boinc/client/gui_rpc_server.cpp
===================================================================
--- boinc.orig/client/gui_rpc_server.cpp
+++ boinc/client/gui_rpc_server.cpp
@@ -120,7 +120,7 @@ bool GUI_RPC_CONN_SET::recent_rpc_needs_
 }
 
 // read the GUI RPC password from gui_rpc_auth.cfg;
-// create one if missing or empty.
+// create one if missing
 //
 void GUI_RPC_CONN_SET::get_password() {
     int retval;
@@ -132,16 +132,15 @@ void GUI_RPC_CONN_SET::get_password() {
             strip_whitespace(password);
         }
         fclose(f);
-        if (strlen(password)) {
-            return;
-        }
 
-        // File is empty; don't allow this.
-        // Fall through and create a password.
+        // if password is empty, allow it but issue a warning
         //
-        msg_printf(NULL, MSG_INFO,
-            "%s is empty - assigning new GUI RPC password", GUI_RPC_PASSWD_FILE
-        );
+        if (!strlen(password)) {
+            msg_printf(NULL, MSG_USER_ALERT,
+                "Warning: GUI RPC password is empty.  BOINC can be controlled by any user on this computer.  See https://boinc.berkeley.edu/gui_rpc_passwd.php for more information."
+            );
+        }
+        return;
     }
 
     // make a random password
@@ -206,7 +205,7 @@ int GUI_RPC_CONN_SET::get_allowed_hosts(
                 "[gui_rpc] found allowed hosts list"
             );
         }
- 
+
         // read in each line, if it is not a comment
         // then resolve the address and add to our allowed list
         //
@@ -453,7 +452,7 @@ void GUI_RPC_CONN_SET::got_select(FDSET_
         // For unknown reasons, the FD_ISSET() above succeeds
         // after a SIGTERM, SIGHUP, SIGINT or SIGQUIT is received,
         // even if there is no data available on the socket.
-        // This causes the accept() call to block, preventing the main 
+        // This causes the accept() call to block, preventing the main
         // loop from processing the exit request.
         // This is a workaround for that problem.
         //
@@ -474,7 +473,7 @@ void GUI_RPC_CONN_SET::got_select(FDSET_
 #endif
 
         bool host_allowed;
-         
+
         // accept the connection if:
         // 1) allow_remote_gui_rpc is set or
         // 2) client host is included in "remote_hosts" file or
