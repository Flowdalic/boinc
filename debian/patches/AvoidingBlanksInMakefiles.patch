Author: Unclear
Description: Just indentiation.

Index: boinc/Makefile.am
===================================================================
--- boinc.orig/Makefile.am	2011-06-10 10:39:29.000000000 +0200
+++ boinc/Makefile.am	2011-06-11 18:45:03.000000000 +0200
@@ -9,15 +9,15 @@
 ACLOCAL_AMFLAGS = -I m4
 
 if ENABLE_LIBRARIES
-   API_SUBDIRS = api lib
+API_SUBDIRS = api lib
 endif
 
 if ENABLE_SERVER
-   SERVER_SUBDIRS = db test py sched apps tools samples/example_app
+SERVER_SUBDIRS = db test py sched apps tools samples/example_app
 endif
 
 if ENABLE_CLIENT
-   CLIENT_SUBDIRS = client client/scripts
+CLIENT_SUBDIRS = client client/scripts
 endif
 
 if ENABLE_MANAGER
@@ -38,12 +38,12 @@
 	win_build                                   \
 	doc                                         \
 	stripchart                                  \
-    INSTALL										
+	INSTALL
 
 if INSTALL_HEADERS
 pkginclude_HEADERS = \
-    version.h \
-    svn_version.h
+	version.h \
+	svn_version.h
 endif
 
 # svn_version.h should always be rebuilt.
Index: boinc/Makefile.incl
===================================================================
--- boinc.orig/Makefile.incl	2011-06-10 10:39:29.000000000 +0200
+++ boinc/Makefile.incl	2011-06-11 18:45:03.000000000 +0200
@@ -18,13 +18,13 @@
 AM_LIBTOOLFLAGS =
 
 AM_CPPFLAGS =					\
-        -I$(top_srcdir)/lib			\
-        -I$(top_srcdir)/api			\
-        -I$(top_srcdir)/db			\
-        -I$(top_srcdir)/client			\
-        -I$(top_srcdir)/tools			\
-        -I$(top_srcdir)/sched			\
-        -I$(top_srcdir)/lib/mac			\
+	-I$(top_srcdir)/lib			\
+	-I$(top_srcdir)/api			\
+	-I$(top_srcdir)/db			\
+	-I$(top_srcdir)/client			\
+	-I$(top_srcdir)/tools			\
+	-I$(top_srcdir)/sched			\
+	-I$(top_srcdir)/lib/mac			\
 	$(PTHREAD_CFLAGS)
 
 AM_CFLAGS =
Index: boinc/api/Makefile.am
===================================================================
--- boinc.orig/api/Makefile.am	2011-06-10 10:39:30.000000000 +0200
+++ boinc/api/Makefile.am	2011-06-11 18:45:03.000000000 +0200
@@ -7,24 +7,24 @@
 
 # stuff linked into both main app and graphics app
 api_files= \
-    boinc_api.cpp \
-    reduce_main.cpp \
-    graphics2_util.cpp
+	boinc_api.cpp \
+	reduce_main.cpp \
+	graphics2_util.cpp
 
 # stuff linked into graphics app
 graphics2_files = \
-    gutil.cpp \
-    gutil_text.cpp \
-    reduce_lib.cpp \
-    texfont.cpp \
-    texture.cpp \
-    txf_util.cpp \
-    graphics2.cpp \
-    graphics2_unix.cpp
+	gutil.cpp \
+	gutil_text.cpp \
+	reduce_lib.cpp \
+	texfont.cpp \
+	texture.cpp \
+	txf_util.cpp \
+	graphics2.cpp \
+	graphics2_unix.cpp
 
 if OS_DARWIN
-    graphics2_files += mac_icon.cpp
-    graphics2_files += macglutfix.m
+graphics2_files += mac_icon.cpp
+graphics2_files += macglutfix.m
 endif
 
 EXTRA_DIST = *.h
Index: boinc/client/Makefile.am
===================================================================
--- boinc.orig/client/Makefile.am	2011-06-10 10:39:30.000000000 +0200
+++ boinc/client/Makefile.am	2011-06-11 18:45:03.000000000 +0200
@@ -4,7 +4,7 @@
 include $(top_srcdir)/Makefile.incl
 
 if ENABLE_CLIENT_RELEASE
-  AM_LDFLAGS += -static-libtool-libs
+AM_LDFLAGS += -static-libtool-libs
 ## for an entirely statically linked library, you may want to try
 ## -all-static instead.  There's a good chance it won't work properly,
 ## so we'll use the safer "-static-libtool-libs" by default.
@@ -12,14 +12,14 @@
 if DYNAMIC_CLIENT
 ## if libtool starts to need flags for dynamic linking, add them here
 else
-  AM_LDFLAGS += -static
+AM_LDFLAGS += -static
 endif
 endif ## ENABLE_CLIENT_RELEASE
 
 LIBS += $(CLIENTLIBS)
 
 if OS_DARWIN
-   LIBS += -framework IOKit -framework Foundation -framework ScreenSaver -framework Cocoa
+LIBS += -framework IOKit -framework Foundation -framework ScreenSaver -framework Cocoa
 endif
 
 bin_PROGRAMS = boinc_client switcher boinccmd
@@ -31,52 +31,52 @@
 boinccmd_LDADD = $(LIBBOINC) $(BOINC_EXTRA_LIBS) $(PTHREAD_LIBS)
 
 boinc_client_SOURCES = \
-    acct_mgr.cpp \
-    acct_setup.cpp \
-    app.cpp \
-    app_control.cpp \
-    app_graphics.cpp \
-    app_start.cpp \
-    auto_update.cpp \
-    check_state.cpp \
-    client_msgs.cpp \
-    client_state.cpp \
-    client_types.cpp \
+	acct_mgr.cpp \
+	acct_setup.cpp \
+	app.cpp \
+	app_control.cpp \
+	app_graphics.cpp \
+	app_start.cpp \
+	auto_update.cpp \
+	check_state.cpp \
+	client_msgs.cpp \
+	client_state.cpp \
+	client_types.cpp \
 	coproc_detect.cpp \
-    cpu_sched.cpp \
-    cs_account.cpp \
-    cs_apps.cpp \
-    cs_benchmark.cpp \
-    cs_cmdline.cpp \
-    cs_files.cpp \
-    cs_notice.cpp \
-    cs_platforms.cpp \
-    cs_prefs.cpp \
-    cs_proxy.cpp \
-    cs_scheduler.cpp \
-    cs_statefile.cpp \
-    cs_trickle.cpp \
+	cpu_sched.cpp \
+	cs_account.cpp \
+	cs_apps.cpp \
+	cs_benchmark.cpp \
+	cs_cmdline.cpp \
+	cs_files.cpp \
+	cs_notice.cpp \
+	cs_platforms.cpp \
+	cs_prefs.cpp \
+	cs_proxy.cpp \
+	cs_scheduler.cpp \
+	cs_statefile.cpp \
+	cs_trickle.cpp \
 	current_version.cpp \
-    dhrystone.cpp \
-    dhrystone2.cpp \
-    file_names.cpp \
-    file_xfer.cpp \
-    gui_http.cpp \
-    gui_rpc_server.cpp \
-    gui_rpc_server_ops.cpp \
-    hostinfo_network.cpp \
-    hostinfo_unix.cpp \
-    http_curl.cpp \
-    log_flags.cpp \
-    main.cpp \
-    net_stats.cpp \
-    pers_file_xfer.cpp \
-    rr_sim.cpp \
-    sandbox.cpp \
-    scheduler_op.cpp \
-    time_stats.cpp \
-    whetstone.cpp \
-    work_fetch.cpp
+	dhrystone.cpp \
+	dhrystone2.cpp \
+	file_names.cpp \
+	file_xfer.cpp \
+	gui_http.cpp \
+	gui_rpc_server.cpp \
+	gui_rpc_server_ops.cpp \
+	hostinfo_network.cpp \
+	hostinfo_unix.cpp \
+	http_curl.cpp \
+	log_flags.cpp \
+	main.cpp \
+	net_stats.cpp \
+	pers_file_xfer.cpp \
+	rr_sim.cpp \
+	sandbox.cpp \
+	scheduler_op.cpp \
+	time_stats.cpp \
+	whetstone.cpp \
+	work_fetch.cpp
 
 boinc_client_DEPENDENCIES = $(LIBBOINC)
 boinc_client_CPPFLAGS = $(AM_CPPFLAGS)
@@ -105,6 +105,6 @@
 ## these source files need to be specified because no rule uses them.
 
 EXTRA_DIST = *.h \
-    mac \
-    translation \
-    win
+	mac \
+	translation \
+	win
Index: boinc/clientgui/Makefile.am
===================================================================
--- boinc.orig/clientgui/Makefile.am	2011-06-10 10:39:30.000000000 +0200
+++ boinc/clientgui/Makefile.am	2011-06-11 18:45:03.000000000 +0200
@@ -4,7 +4,7 @@
 include $(top_srcdir)/Makefile.incl
 
 if ENABLE_CLIENT_RELEASE
-  AM_LDFLAGS += -static-libtool-libs
+AM_LDFLAGS += -static-libtool-libs
 ## for an entirely statically linked library, you may want to try
 ## -all-static instead.  There's a good chance it won't work properly,
 ## so we'll use the safer "-static-libtool-libs" by default.
@@ -12,23 +12,23 @@
 if DYNAMIC_CLIENT
 ## if libtool starts to need flags for dynamic linking, add them here
 else
-  AM_LDFLAGS += -static
+AM_LDFLAGS += -static
 endif
 endif ## ENABLE_CLIENT_RELEASE
 
 if OS_DARWIN
-   LIBS += -framework IOKit -framework Foundation -framework ScreenSaver -framework Cocoa -framework Security
-   mac_sources = mac/SystemMenu.m \
-                 mac/mac_saver_module.cpp \
-                 mac/Mac_Saver_ModuleView.m \
-                 mac/MacSysMenu.cpp \
-                 mac/Mac_GUI.cpp\
-                 mac/browser_safari.mm
+LIBS += -framework IOKit -framework Foundation -framework ScreenSaver -framework Cocoa -framework Security
+mac_sources = mac/SystemMenu.m \
+	mac/mac_saver_module.cpp \
+	mac/Mac_Saver_ModuleView.m \
+	mac/MacSysMenu.cpp \
+	mac/Mac_GUI.cpp\
+	mac/browser_safari.mm
 
-   mac_headers = mac/*.h
+mac_headers = mac/*.h
 else
-   mac_headers =
-   mac_sources = 
+mac_headers =
+mac_sources =
 endif
 
 bin_PROGRAMS = boincmgr
@@ -36,87 +36,87 @@
 # keep the following alphabetic
 
 boincmgr_SOURCES = \
-    AccountInfoPage.cpp \
-    AccountManagerInfoPage.cpp \
-    AccountManagerProcessingPage.cpp \
-    AccountManagerPropertiesPage.cpp \
-    AdvancedFrame.cpp \
-    AlreadyExistsPage.cpp \
-    AsyncRPC.cpp \
-    BOINCBaseFrame.cpp \
-    BOINCBaseView.cpp \
-    BOINCBaseWizard.cpp \
-    BOINCClientManager.cpp \
-    BOINCDialupManager.cpp \
-    BOINCGUIApp.cpp \
-    BOINCHtmlLBox.cpp \
-    BOINCInternetFSHandler.cpp \
-    BOINCListCtrl.cpp \
-    BOINCTaskBar.cpp \
-    BOINCTaskCtrl.cpp \
-    BOINCVListBox.cpp \
-    browser.cpp \
-    CompletionErrorPage.cpp \
-    CompletionPage.cpp \
-    common/wxPieCtrl.cpp \
-    common/wxFlatNotebook.cpp \
-    DlgAbout.cpp 		\
-    DlgAdvPreferences.cpp \
-    DlgAdvPreferencesBase.cpp \
-    DlgEventLog.cpp \
-    DlgEventLogListCtrl.cpp \
-    DlgExitMessage.cpp \
-    DlgGenericMessage.cpp \
-    DlgItemProperties.cpp \
-    DlgOptions.cpp \
-    DlgSelectComputer.cpp \
-    gtk/taskbarex.cpp \
-    LogBOINC.cpp \
-    MainDocument.cpp \
-    NoInternetConnectionPage.cpp \
-    NotDetectedPage.cpp \
-    NotFoundPage.cpp \
-    NoticeListCtrl.cpp \
-    ProjectInfoPage.cpp \
-    ProjectListCtrl.cpp \
-    ProjectProcessingPage.cpp \
-    ProjectPropertiesPage.cpp \
-    ProxyInfoPage.cpp \
-    ProxyPage.cpp \
-    sg_BoincSimpleGUI.cpp \
-    sg_ClientStateIndicator.cpp \
-    sg_CustomControls.cpp \
-    sg_DlgMessages.cpp \
-    sg_DlgPreferences.cpp \
-    sg_ImageButton.cpp \
-    sg_ImageLoader.cpp \
-    sg_ProgressBar.cpp \
-    sg_ProjectsComponent.cpp \
-    sg_StatImageLoader.cpp \
-    sg_ViewTabPage.cpp \
-    SkinManager.cpp \
-    stdwx.cpp \
-    TermsOfUsePage.cpp \
-    UnavailablePage.cpp \
-    ValidateAccountKey.cpp \
-    ValidateEmailAddress.cpp \
-    ValidateURL.cpp \
-    ViewNotices.cpp \
-    ViewProjects.cpp \
-    ViewResources.cpp \
-    ViewStatistics.cpp \
-    ViewTransfers.cpp \
-    ViewWork.cpp \
-    WelcomePage.cpp \
-    WizardAttach.cpp \
-    wizardex.cpp \
-    $(mac_sources)
+	AccountInfoPage.cpp \
+	AccountManagerInfoPage.cpp \
+	AccountManagerProcessingPage.cpp \
+	AccountManagerPropertiesPage.cpp \
+	AdvancedFrame.cpp \
+	AlreadyExistsPage.cpp \
+	AsyncRPC.cpp \
+	BOINCBaseFrame.cpp \
+	BOINCBaseView.cpp \
+	BOINCBaseWizard.cpp \
+	BOINCClientManager.cpp \
+	BOINCDialupManager.cpp \
+	BOINCGUIApp.cpp \
+	BOINCHtmlLBox.cpp \
+	BOINCInternetFSHandler.cpp \
+	BOINCListCtrl.cpp \
+	BOINCTaskBar.cpp \
+	BOINCTaskCtrl.cpp \
+	BOINCVListBox.cpp \
+	browser.cpp \
+	CompletionErrorPage.cpp \
+	CompletionPage.cpp \
+	common/wxPieCtrl.cpp \
+	common/wxFlatNotebook.cpp \
+	DlgAbout.cpp 		\
+	DlgAdvPreferences.cpp \
+	DlgAdvPreferencesBase.cpp \
+	DlgEventLog.cpp \
+	DlgEventLogListCtrl.cpp \
+	DlgExitMessage.cpp \
+	DlgGenericMessage.cpp \
+	DlgItemProperties.cpp \
+	DlgOptions.cpp \
+	DlgSelectComputer.cpp \
+	gtk/taskbarex.cpp \
+	LogBOINC.cpp \
+	MainDocument.cpp \
+	NoInternetConnectionPage.cpp \
+	NotDetectedPage.cpp \
+	NotFoundPage.cpp \
+	NoticeListCtrl.cpp \
+	ProjectInfoPage.cpp \
+	ProjectListCtrl.cpp \
+	ProjectProcessingPage.cpp \
+	ProjectPropertiesPage.cpp \
+	ProxyInfoPage.cpp \
+	ProxyPage.cpp \
+	sg_BoincSimpleGUI.cpp \
+	sg_ClientStateIndicator.cpp \
+	sg_CustomControls.cpp \
+	sg_DlgMessages.cpp \
+	sg_DlgPreferences.cpp \
+	sg_ImageButton.cpp \
+	sg_ImageLoader.cpp \
+	sg_ProgressBar.cpp \
+	sg_ProjectsComponent.cpp \
+	sg_StatImageLoader.cpp \
+	sg_ViewTabPage.cpp \
+	SkinManager.cpp \
+	stdwx.cpp \
+	TermsOfUsePage.cpp \
+	UnavailablePage.cpp \
+	ValidateAccountKey.cpp \
+	ValidateEmailAddress.cpp \
+	ValidateURL.cpp \
+	ViewNotices.cpp \
+	ViewProjects.cpp \
+	ViewResources.cpp \
+	ViewStatistics.cpp \
+	ViewTransfers.cpp \
+	ViewWork.cpp \
+	WelcomePage.cpp \
+	WizardAttach.cpp \
+	wizardex.cpp \
+	$(mac_sources)
 
 EXTRA_DIST = *.h \
-    res \
-    msw \
-    ../lib/error_numbers.h \
-    locale $(mac_headers)
+	res \
+	msw \
+	../lib/error_numbers.h \
+	locale $(mac_headers)
 
 boincmgr_CPPFLAGS = $(AM_CPPFLAGS) $(WX_CPPFLAGS) $(SQLITE3_CPPFLAGS) $(LIBNOTIFY_CFLAGS) $(CLIENTGUIFLAGS)
 boincmgr_CXXFLAGS = $(AM_CXXFLAGS) $(WX_CXXFLAGS) $(SQLITE3_CPPFLAGS) $(LIBNOTIFY_CFLAGS) $(CLIENTGUIFLAGS)
Index: boinc/clientscr/Makefile.am
===================================================================
--- boinc.orig/clientscr/Makefile.am	2011-06-10 10:39:30.000000000 +0200
+++ boinc/clientscr/Makefile.am	2011-06-11 18:45:03.000000000 +0200
@@ -4,7 +4,7 @@
 include $(top_srcdir)/Makefile.incl
 
 if ENABLE_CLIENT_RELEASE
-  AM_LDFLAGS += -static-libtool-libs
+AM_LDFLAGS += -static-libtool-libs
 ## for an entirely statically linked library, you may want to try
 ## -all-static instead.  There's a good chance it won't work properly,
 ## so we'll use the safer "-static-libtool-libs" by default.
@@ -12,7 +12,7 @@
 if DYNAMIC_CLIENT
 ## if libtool starts to need flags for dynamic linking, add them here
 else
-  AM_LDFLAGS += -static
+AM_LDFLAGS += -static
 endif
 endif ## ENABLE_CLIENT_RELEASE
 
Index: boinc/doc/Makefile.am
===================================================================
--- boinc.orig/doc/Makefile.am	2011-06-10 10:39:30.000000000 +0200
+++ boinc/doc/Makefile.am	2011-06-11 18:45:03.000000000 +0200
@@ -4,7 +4,7 @@
 include $(top_srcdir)/Makefile.incl
 
 if HAVE_DOCBOOK2X_MAN
-  MAYBE_MANPAGES = manpages
+MAYBE_MANPAGES = manpages
 endif
 
 SUBDIRS = $(MAYBE_MANPAGES)
Index: boinc/lib/Makefile.am
===================================================================
--- boinc.orig/lib/Makefile.am	2011-06-11 18:04:00.000000000 +0200
+++ boinc/lib/Makefile.am	2011-06-11 18:46:12.000000000 +0200
@@ -17,71 +17,71 @@
 if ENABLE_LIBRARIES
 
 libfcgi_sources = \
-    boinc_fcgi.cpp \
-    coproc.cpp \
-    filesys.cpp \
-    hostinfo.cpp \
-    md5.c \
-    md5_file.cpp \
-    miofile.cpp \
-    msg_log.cpp \
-    parse.cpp \
-    shmem.cpp \
-    str_util.cpp \
-    synch.cpp \
+	boinc_fcgi.cpp \
+	coproc.cpp \
+	filesys.cpp \
+	hostinfo.cpp \
+	md5.c \
+	md5_file.cpp \
+	miofile.cpp \
+	msg_log.cpp \
+	parse.cpp \
+	shmem.cpp \
+	str_util.cpp \
+	synch.cpp \
 	url.cpp \
-    util.cpp
+	util.cpp
 
 generic_sources = \
-    app_ipc.cpp \
-    base64.cpp \
-    cert_sig.cpp \
-    coproc.cpp \
-    diagnostics.cpp \
-    filesys.cpp \
-    gui_rpc_client.cpp \
-    gui_rpc_client_ops.cpp \
-    gui_rpc_client_print.cpp \
-    hostinfo.cpp \
-    mac_address.cpp \
-    md5.c \
-    md5_file.cpp \
-    mem_usage.cpp \
-    mfile.cpp \
-    miofile.cpp \
-    msg_log.cpp \
-    network.cpp \
+	app_ipc.cpp \
+	base64.cpp \
+	cert_sig.cpp \
+	coproc.cpp \
+	diagnostics.cpp \
+	filesys.cpp \
+	gui_rpc_client.cpp \
+	gui_rpc_client_ops.cpp \
+	gui_rpc_client_print.cpp \
+	hostinfo.cpp \
+	mac_address.cpp \
+	md5.c \
+	md5_file.cpp \
+	mem_usage.cpp \
+	mfile.cpp \
+	miofile.cpp \
+	msg_log.cpp \
+	network.cpp \
 	notice.cpp \
-    parse.cpp \
-    prefs.cpp \
-    procinfo.cpp \
-    procinfo_unix.cpp \
-    proxy_info.cpp \
-    shmem.cpp \
-    str_util.cpp \
-    synch.cpp \
-    unix_util.cpp \
+	parse.cpp \
+	prefs.cpp \
+	procinfo.cpp \
+	procinfo_unix.cpp \
+	proxy_info.cpp \
+	shmem.cpp \
+	str_util.cpp \
+	synch.cpp \
+	unix_util.cpp \
 	url.cpp \
-    util.cpp
+	util.cpp
 
 if OS_DARWIN
 mac_sources = \
-    mac/mac_backtrace.cpp \
-    mac/QBacktrace.c \
-    mac/QCrashReport.c \
-    mac/QMachOImage.c \
-    mac/QMachOImageList.c \
-    mac/QSymbols.c \
-    mac/QTaskMemory.c
+	mac/mac_backtrace.cpp \
+	mac/QBacktrace.c \
+	mac/QCrashReport.c \
+	mac/QMachOImage.c \
+	mac/QMachOImageList.c \
+	mac/QSymbols.c \
+	mac/QTaskMemory.c
 mac_headers = \
-    mac/dyld_gdb.h \
-    mac/mac_backtrace.h \
-    mac/QBacktrace.h \
-    mac/QCrashReport.h \
-    mac/QMachOImage.h \
-    mac/QMachOImageList.h \
-    mac/QSymbols.h \
-    mac/QTaskMemory.h
+	mac/dyld_gdb.h \
+	mac/mac_backtrace.h \
+	mac/QBacktrace.h \
+	mac/QCrashReport.h \
+	mac/QMachOImage.h \
+	mac/QMachOImageList.h \
+	mac/QSymbols.h \
+	mac/QTaskMemory.h
 else
 mac_sources = 
 mac_headers =
@@ -90,52 +90,52 @@
 
 if INSTALL_HEADERS
 pkginclude_HEADERS = \
-    app_ipc.h \
-    average.h \
-    base64.h \
-    boinc_fcgi.h \
-    boinc_win.h \
-    cal_boinc.h \
-    cert_sig.h \
-    common_defs.h \
-    coproc.h \
-    crypt.h \
-    diagnostics.h \
-    diagnostics_win.h \
-    error_numbers.h \
-    filesys.h \
-    gui_rpc_client.h \
-    hostinfo.h \
-    mac_address.h \
-    md5.h \
-    md5_file.h \
-    mem_usage.h \
-    mfile.h \
-    miofile.h \
-    msg_log.h \
-    network.h \
+	app_ipc.h \
+	average.h \
+	base64.h \
+	boinc_fcgi.h \
+	boinc_win.h \
+	cal_boinc.h \
+	cert_sig.h \
+	common_defs.h \
+	coproc.h \
+	crypt.h \
+	diagnostics.h \
+	diagnostics_win.h \
+	error_numbers.h \
+	filesys.h \
+	gui_rpc_client.h \
+	hostinfo.h \
+	mac_address.h \
+	md5.h \
+	md5_file.h \
+	mem_usage.h \
+	mfile.h \
+	miofile.h \
+	msg_log.h \
+	network.h \
 	notice.h \
-    parse.h \
-    prefs.h \
-    proxy_info.h \
-    stackwalker_imports.h \
-    stackwalker_win.h \
-    str_util.h \
+	parse.h \
+	prefs.h \
+	proxy_info.h \
+	stackwalker_imports.h \
+	stackwalker_win.h \
+	str_util.h \
 	url.h \
-    util.h \
-    win_util.h \
-    $(mac_headers)
+	util.h \
+	win_util.h \
+	$(mac_headers)
 endif
 
 # These are used internally and are not meant to be installed
 noinst_HEADERS = \
-    msg_queue.h \
-    proc_control.h \
-    procinfo.h \
-    shmem.h \
-    str_replace.h \
-    synch.h \
-    unix_util.h
+	msg_queue.h \
+	proc_control.h \
+	procinfo.h \
+	shmem.h \
+	str_replace.h \
+	synch.h \
+	unix_util.h
 
 lib_LTLIBRARIES = libboinc.la libboinc_crypt.la
 libboinc_la_SOURCES = $(generic_sources) $(mac_sources)
Index: boinc/sched/Makefile.am
===================================================================
--- boinc.orig/sched/Makefile.am	2011-06-10 10:39:30.000000000 +0200
+++ boinc/sched/Makefile.am	2011-06-11 18:45:03.000000000 +0200
@@ -9,16 +9,16 @@
 if ENABLE_LIBRARIES
 
 libsched_sources = \
-    credit.cpp \
-    sched_shmem.cpp \
-    sched_util.cpp \
-    sched_config.cpp \
-    sched_limit.cpp \
-    sched_msgs.cpp \
-    ../db/boinc_db.cpp \
-    ../db/db_base.cpp \
-    ../tools/process_result_template.cpp \
-    ../tools/backend_lib.cpp
+	credit.cpp \
+	sched_shmem.cpp \
+	sched_util.cpp \
+	sched_config.cpp \
+	sched_limit.cpp \
+	sched_msgs.cpp \
+	../db/boinc_db.cpp \
+	../db/db_base.cpp \
+	../tools/process_result_template.cpp \
+	../tools/backend_lib.cpp
 
 lib_LTLIBRARIES = libsched.la
 libsched_la_SOURCES = $(libsched_sources)
@@ -90,83 +90,83 @@
 scheddir = $(libexecdir)/sched
 
 bin_PROGRAMS = \
-    delete_file \
-    get_file \
-    make_work \
-    request_file_list \
-    sched_driver \
-    send_file \
-    show_shmem \
-    wu_check
+	delete_file \
+	get_file \
+	make_work \
+	request_file_list \
+	sched_driver \
+	send_file \
+	show_shmem \
+	wu_check
 
 sched_PROGRAMS = \
-    census \
+	census \
 	credit_test \
-    db_dump \
-    db_purge \
-    feeder \
-    file_deleter \
-    message_handler \
-    sample_assimilator \
-    sample_dummy_assimilator \
-    sample_bitwise_validator \
-    sample_trivial_validator \
-    sample_work_generator \
-    single_job_assimilator \
-    transitioner \
-    trickle_handler \
-    update_stats
+	db_dump \
+	db_purge \
+	feeder \
+	file_deleter \
+	message_handler \
+	sample_assimilator \
+	sample_dummy_assimilator \
+	sample_bitwise_validator \
+	sample_trivial_validator \
+	sample_work_generator \
+	single_job_assimilator \
+	transitioner \
+	trickle_handler \
+	update_stats
 
 cgi_PROGRAMS= \
-    cgi \
-    file_upload_handler
+	cgi \
+	file_upload_handler
 
 # scripts that 'make install' should put in bindir
 bin_SCRIPTS = start stop status
 
 noinst_HEADERS = \
-    assimilate_handler.h \
-    handle_request.h \
-    sched_main.h \
-    sched_locality.h \
-    sched_score.h \
-    sched_send.h \
-    sched_shmem.h \
-    sched_version.h \
-    sched_types.h
+	assimilate_handler.h \
+	handle_request.h \
+	sched_main.h \
+	sched_locality.h \
+	sched_score.h \
+	sched_send.h \
+	sched_shmem.h \
+	sched_version.h \
+	sched_types.h
 
 EXTRA_DIST = \
-    start
+	start
 
 cgi_sources = \
 	credit.cpp \
-    edf_sim.cpp \
-    handle_request.cpp \
-    hr.cpp \
-    hr_info.cpp \
-    sched_main.cpp \
-    sched_array.cpp \
-    sched_assign.cpp \
-    sched_customize.cpp \
-    sched_hr.cpp \
-    sched_resend.cpp \
-    sched_limit.cpp \
-    sched_locality.cpp \
-    sched_result.cpp \
-    sched_score.cpp \
-    sched_send.cpp \
-    sched_timezone.cpp \
-    sched_version.cpp \
-    sched_types.cpp \
-    time_stats_log.cpp
+	edf_sim.cpp \
+	handle_request.cpp \
+	hr.cpp \
+	hr_info.cpp \
+	sched_main.cpp \
+	sched_array.cpp \
+	sched_assign.cpp \
+	sched_customize.cpp \
+	sched_hr.cpp \
+	sched_resend.cpp \
+	sched_limit.cpp \
+	sched_locality.cpp \
+	sched_result.cpp \
+	sched_score.cpp \
+	sched_send.cpp \
+	sched_timezone.cpp \
+	sched_version.cpp \
+	sched_types.cpp \
+	time_stats_log.cpp
 
 cgi_SOURCES = $(cgi_sources)
 cgi_LDADD = $(SERVERLIBS)
 
 census_SOURCES = \
-    census.cpp \
-    hr.cpp \
-    hr_info.cpp
+	census.cpp \
+	hr.cpp \
+	hr_info.cpp
 census_LDADD = $(SERVERLIBS)
 
 credit_test_SOURCES = \
@@ -174,10 +174,10 @@
 credit_test_LDADD = $(SERVERLIBS)
 
 feeder_SOURCES = \
-    feeder.cpp \
-    hr.cpp \
-    hr_info.cpp \
-    ../lib/synch.cpp
+	feeder.cpp \
+	hr.cpp \
+	hr_info.cpp \
+	../lib/synch.cpp
 feeder_LDADD = $(SERVERLIBS)
 
 wu_check_SOURCES = wu_check.cpp
@@ -264,16 +264,16 @@
 if ENABLE_FCGI
 
 cgi_PROGRAMS += fcgi \
-                fcgi_file_upload_handler
+	fcgi_file_upload_handler
 
 fcgi_SOURCES = $(cgi_sources)
 fcgi_CPPFLAGS = -D_USING_FCGI_ $(AM_CPPFLAGS)
 fcgi_LDADD = $(SERVERLIBS_FCGI)
 
 fcgi_file_upload_handler_SOURCES = \
-    file_upload_handler.cpp \
-    sched_config.cpp \
-    sched_msgs.cpp 
+	file_upload_handler.cpp \
+	sched_config.cpp \
+	sched_msgs.cpp
 fcgi_file_upload_handler_CPPFLAGS = -D_USING_FCGI_ $(AM_CPPFLAGS)
 fcgi_file_upload_handler_LDADD = $(SERVERLIBS_FCGI)
 
