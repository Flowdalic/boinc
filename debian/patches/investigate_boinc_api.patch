--- a/api/boinc_api.cpp
+++ b/api/boinc_api.cpp
@@ -331,7 +331,7 @@
 
     if (standalone) return true;
 
-    sprintf(msg_buf,
+    snprintf(msg_buf,sizeof(msg_buf),
         "<current_cpu_time>%e</current_cpu_time>\n"
         "<checkpoint_cpu_time>%e</checkpoint_cpu_time>\n",
         cpu_t, cp_cpu_t
@@ -343,7 +343,7 @@
         double range = aid.fraction_done_end - aid.fraction_done_start;
         double fdone = aid.fraction_done_start + fraction_done*range;
         sprintf(buf, "<fraction_done>%e</fraction_done>\n", fdone);
-        strlcat(msg_buf, buf, MSG_CHANNEL_SIZE);
+        strlcat(msg_buf, buf, sizeof(msg_buf));
     }
     if (bytes_sent) {
         sprintf(buf, "<bytes_sent>%f</bytes_sent>\n", bytes_sent);
@@ -608,6 +608,10 @@
 }
 
 int boinc_get_status(BOINC_STATUS *s) {
+    if (!s) {
+        fprintf(stderr,"E: boinc_get_status(NULL)\n");
+	return 1;
+    }
     s->no_heartbeat = boinc_status.no_heartbeat;
     s->suspended = boinc_status.suspended;
     s->quit_request = boinc_status.quit_request;
@@ -784,7 +788,7 @@
 int boinc_parse_init_data_file() {
     FILE* f;
     int retval;
-    char buf[256];
+    char buf[2560];
 
     if (aid.project_preferences) {
         free(aid.project_preferences);
@@ -834,15 +838,15 @@
     );
     if (other_pid) {
         sprintf(buf, "<other_pid>%d</other_pid>\n", other_pid);
-        strcat(msg_buf, buf);
+        strncat(msg_buf, buf, sizeof(msg_buf));
     }
     if (_bytes_sent) {
         sprintf(buf, "<bytes_sent>%f</bytes_sent>\n", _bytes_sent);
-        strcat(msg_buf, buf);
+        strncat(msg_buf, buf, sizeof(msg_buf));
     }
     if (_bytes_received) {
         sprintf(buf, "<bytes_received>%f</bytes_received>\n", _bytes_received);
-        strcat(msg_buf, buf);
+        strncat(msg_buf, buf, sizeof(msg_buf));
     }
     if (app_client_shm->shm->app_status.send_msg(msg_buf)) {
         return 0;
@@ -913,16 +917,16 @@
 }
 
 static void handle_upload_file_status() {
-    char path[MAXPATHLEN], buf[256], log_name[256], *p, log_buf[256];
+    char path[MAXPATHLEN], buf[MAXPATHLEN], log_name[MAXPATHLEN], *p, log_buf[256];
     std::string filename;
     int status;
 
     relative_to_absolute("", path);
     DirScanner dirscan(path);
     while (dirscan.scan(filename)) {
-        strcpy(buf, filename.c_str());
+        strncpy(buf, filename.c_str(), sizeof(buf));
         if (strstr(buf, UPLOAD_FILE_STATUS_PREFIX) != buf) continue;
-        strcpy(log_name, buf+strlen(UPLOAD_FILE_STATUS_PREFIX));
+        strncpy(log_name, buf+strlen(UPLOAD_FILE_STATUS_PREFIX), sizeof(log_name));
         FILE* f = boinc_fopen(filename.c_str(), "r");
         if (!f) {
             fprintf(stderr,
@@ -931,7 +935,7 @@
             );
             continue;
         }
-        p = fgets(buf, 256, f);
+        p = fgets(buf, sizeof(buf), f);
         fclose(f);
         if (p && parse_int(buf, "<status>", status)) {
             UPLOAD_FILE_STATUS uf;
@@ -1072,7 +1076,7 @@
 #ifdef _WIN32
         GetFullPathName(path, MAXPATHLEN, abspath, NULL);
 #else
-        strcpy(abspath, path);
+        strncpy(abspath, path, sizeof(abspath));
 #endif
         argv[0] = const_cast<char*>(GRAPHICS_APP_FILENAME);
         if (fullscreen) {
@@ -1260,7 +1264,7 @@
     // send graphics-related messages
     //
     if (send_web_graphics_url && !app_client_shm->shm->graphics_reply.has_msg()) {
-        sprintf(buf,
+        snprintf(buf, sizeof(buf),
             "<web_graphics_url>%s</web_graphics_url>",
             web_graphics_url
         );
@@ -1268,7 +1272,7 @@
         send_web_graphics_url = false;
     }
     if (send_remote_desktop_addr && !app_client_shm->shm->graphics_reply.has_msg()) {
-        sprintf(buf,
+        snprintf(buf, sizeof(buf),
             "<remote_desktop_addr>%s</remote_desktop_addr>",
             remote_desktop_addr
         );
