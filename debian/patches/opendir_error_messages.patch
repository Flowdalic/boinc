Index: boinc/lib/filesys.cpp
===================================================================
--- boinc.orig/lib/filesys.cpp  2012-09-15 12:23:56.681113074 +0200
+++ boinc/lib/filesys.cpp       2012-09-15 12:35:40.833682529 +0200
@@ -364,8 +364,12 @@
     int retval;
     DIRREF dirp;

+    if (!boinc_file_or_symlink_exists(dirpath)) return 0; // if dir doesn't exist, it's empty
     dirp = dir_open(dirpath);
-    if (!dirp) return 0;    // if dir doesn't exist, it's empty
+    if (!dirp) {
+        fprintf(stderr,"clean_out_dir: failed dir_open on '%s'\n",dirpath);
+        return 0;
+    }
     while (1) {
         strcpy(filename, "");
         retval = dir_scan(filename, dirp, sizeof(filename));
Index: boinc/lib/diagnostics.cpp
===================================================================
--- boinc.orig/lib/diagnostics.cpp	2012-08-17 15:47:19.767548254 +0200
+++ boinc/lib/diagnostics.cpp	2012-08-17 15:54:07.000000000 +0200
@@ -75,14 +75,14 @@
 
 static int         diagnostics_initialized = false;
 static int         flags;
-static char        stdout_log[256];
-static char        stdout_archive[256];
+static char        stdout_log[MAXPATHLEN];
+static char        stdout_archive[MAXPATHLEN];
 static FILE*       stdout_file;
-static char        stderr_log[256];
-static char        stderr_archive[256];
+static char        stderr_log[MAXPATHLEN];
+static char        stderr_archive[MAXPATHLEN];
 static FILE*       stderr_file;
-static char        boinc_dir[256];
-static char        boinc_install_dir[256];
+static char        boinc_dir[MAXPATHLEN];
+static char        boinc_install_dir[MAXPATHLEN];
 static int         boinc_proxy_enabled;
 static char        boinc_proxy[256];
 static char        symstore[256];
@@ -306,7 +306,7 @@
 
     // Store various pieces of inforation for future use.
     if (flags & BOINC_DIAG_BOINCAPPLICATION) {
-        char    buf[256];
+        char    buf[MAXPATHLEN];
         char    proxy_address[256];
         int     proxy_port;
         MIOFILE mf;
@@ -331,13 +331,13 @@
 			mf.init_file(p);
 			while(mf.fgets(buf, sizeof(buf))) {
 				if (match_tag(buf, "</app_init_data>")) break;
-				else if (parse_str(buf, "<boinc_dir>", boinc_dir, 256)) continue;
-				else if (parse_str(buf, "<symstore>", symstore, 256)) continue;
+				else if (parse_str(buf, "<boinc_dir>", boinc_dir, sizeof(boinc_dir))) continue;
+				else if (parse_str(buf, "<symstore>", symstore, sizeof(symstore))) continue;
 				else if (match_tag(buf, "<use_http_proxy/>")) {
 					boinc_proxy_enabled = true;
 					continue;
 				}
-				else if (parse_str(buf, "<http_server_name>", proxy_address, 256)) continue;
+				else if (parse_str(buf, "<http_server_name>", proxy_address, sizeof(proxy_address))) continue;
 				else if (parse_int(buf, "<http_server_port>", proxy_port)) continue;
 			}
 			fclose(p);
Index: boinc/client/sandbox.cpp
===================================================================
--- boinc.orig/client/sandbox.cpp	2012-08-17 15:47:19.771548200 +0200
+++ boinc/client/sandbox.cpp	2012-08-17 15:54:07.000000000 +0200
@@ -185,7 +185,7 @@
 // If an error occurs, delete as much as possible.
 //
 int client_clean_out_dir(const char* dirpath, const char* reason) {
-    char filename[256], path[MAXPATHLEN];
+    char filename[MAXPATHLEN], path[MAXPATHLEN];
     int retval, final_retval = 0;
     DIRREF dirp;
 
@@ -207,7 +207,7 @@
         strcpy(filename, "");
         retval = dir_scan(filename, dirp, sizeof(filename));
         if (retval) break;
-        sprintf(path, "%s/%s", dirpath,  filename);
+        snprintf(path, sizeof(path), "%s/%s", dirpath,  filename);
         if (is_dir(path)) {
             retval = client_clean_out_dir(path, NULL);
             if (retval) final_retval = retval;
