Index: boinc/lib/filesys.cpp
===================================================================
--- boinc.orig/lib/filesys.cpp
+++ boinc/lib/filesys.cpp
@@ -585,9 +585,9 @@
     fclose(src);
     fclose(dst);
     // Copy file's ownership, permissions to the extent we are allowed
-    lstat(orig, &sbuf);             // Get source file's info
-    chown(newf, sbuf.st_uid, sbuf.st_gid);
-    chmod(newf, sbuf.st_mode);
+    if (lstat(orig, &sbuf)) retval=ERR_FWRITE;             // Get source file's info
+    if (chown(newf, sbuf.st_uid, sbuf.st_gid)) retval=ERR_FWRITE;
+    if (chmod(newf, sbuf.st_mode)) retval=ERR_FWRITE;
     return retval;
 #endif
 }
Index: boinc/lib/diagnostics.cpp
===================================================================
--- boinc.orig/lib/diagnostics.cpp
+++ boinc/lib/diagnostics.cpp
@@ -344,7 +344,7 @@
 
     // Store various pieces of inforation for future use.
     if (flags & BOINC_DIAG_BOINCAPPLICATION) {
-        char    buf[256];
+        char    buf[MAXPATHLEN];
         char    proxy_address[256];
         int     proxy_port;
         MIOFILE mf;
Index: boinc/client/sandbox.cpp
===================================================================
--- boinc.orig/client/sandbox.cpp
+++ boinc/client/sandbox.cpp
@@ -207,7 +207,7 @@
         strcpy(filename, "");
         retval = dir_scan(filename, dirp, sizeof(filename));
         if (retval) break;
-        sprintf(path, "%s/%s", dirpath,  filename);
+        snprintf(path, sizeof(path), "%s/%s", dirpath,  filename);
         if (is_dir(path)) {
             retval = client_clean_out_dir(path, NULL);
             if (retval) final_retval = retval;
