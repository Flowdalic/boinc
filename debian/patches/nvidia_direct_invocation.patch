Index: boinc/client/coproc_detect.cpp
===================================================================
--- boinc.orig/client/coproc_detect.cpp	2012-04-19 19:16:02.000000000 +0200
+++ boinc/client/coproc_detect.cpp	2012-04-19 19:27:35.988709344 +0200
@@ -1022,21 +1022,33 @@
         return;
     }
 
+#ifndef __cuda_cuda_h__
     retval = (*__cuInit)(0);
+#else
+    retval = cuInit(0);
+#endif
     if (retval) {
         sprintf(buf, "NVIDIA drivers present but no GPUs found");
         warnings.push_back(buf);
         return;
     }
 
+#ifndef __cuda_cuda_h__
     retval = (*__cuDriverGetVersion)(&cuda_version);
+#else
+    retval = cuDriverGetVersion(&cuda_version);
+#endif
     if (retval) {
         sprintf(buf, "cuDriverGetVersion() returned %d", retval);
         warnings.push_back(buf);
         return;
     }
 
+#ifndef __cuda_cuda_h__
     retval = (*__cuDeviceGetCount)(&cuda_ndevs);
+#else
+    retval = cuDeviceGetCount(&cuda_ndevs);
+#endif
     if (retval) {
         sprintf(buf, "cuDeviceGetCount() returned %d", retval);
         warnings.push_back(buf);
@@ -1059,14 +1071,23 @@
  nvidia_gpus.push_back(cc);
 }
 #endif
+
+#ifndef __cuda_cuda_h__
         retval = (*__cuDeviceGet)(&device, j);
+#else
+        retval = cuDeviceGet(&device, j);
+#endif
         if (retval) {
             sprintf(buf, "cuDeviceGet(%d) returned %d", j, retval);
             warnings.push_back(buf);
             return;
         }
         cc.prop.deviceHandle = device;
-        (*__cuDeviceGetName)(cc.prop.name, 256, device);
+#ifndef __cuda_cuda_h__
+        retval = (*__cuDeviceGetName)(cc.prop.name, 256, device);
+#else
+        retval = cuDeviceGetName(cc.prop.name, 256, device);
+#endif
         if (retval) {
             sprintf(buf, "cuDeviceGetName(%d) returned %d", j, retval);
             warnings.push_back(buf);
@@ -1193,7 +1214,11 @@
     void* ctx;
     
     available_ram = prop.totalGlobalMem;
+#ifndef __cuda_cuda_h__
     retval = (*__cuDeviceGet)(&device, device_num);
+#else
+    retval = cuDeviceGet(&device, device_num);
+#endif
     if (retval) {
         if (log_flags.coproc_debug) {
             msg_printf(0, MSG_INFO,
@@ -1204,7 +1229,11 @@
     }
 
     CUcontext ctx; // no immediate better idea
+#ifndef __cuda_cuda_h__
     retval = (*__cuCtxCreate)(&ctx, 0, device);
+#else
+    retval = cuCtxCreate(&ctx, 0, device);
+#endif
     if (retval) {
         if (log_flags.coproc_debug) {
             msg_printf(0, MSG_INFO,
@@ -1215,17 +1244,29 @@
     }
 
     size_t memfree, memtotal;
+#ifndef __cuda_cuda_h__
     retval = (*__cuMemGetInfo)(&memfree, &memtotal);
+#else
+    retval = cuMemGetInfo(&memfree, &memtotal);
+#endif
     if (retval) {
         if (log_flags.coproc_debug) {
             msg_printf(0, MSG_INFO,
                 "[coproc] cuMemGetInfo(%d) returned %d", device_num, retval
             );
         }
+#ifndef __cuda_cuda_h__
         (*__cuCtxDestroy)(ctx);
+#else
+        cuCtxDestroy(ctx);
+#endif
         return;
     }
+#ifndef __cuda_cuda_h__
     (*__cuCtxDestroy)(ctx);
+#else
+        cuCtxDestroy(ctx);
+#endif
     available_ram = (double) memfree;
 }
 
